import{_ as X}from"./DetailHeader.vue_vue_type_script_setup_true_lang-ce281b90.js";import{_ as Y}from"./ToolDetail.vue_vue_type_script_setup_true_lang-06caee93.js";import{d as Z,s as L,G as O,o as K,v as R,r as D,b as n,c as d,i as H,f as t,t as u,g as B,h as P,j as b,p as m,T as w,F as v,e as S,I as N,L as q,_ as Q}from"./index-b4427edb.js";const ee={class:"flex flex-col mt-3 ml-4 flex-1 mr-3"},te={class:"p-6 rounded-2xl bg-white shadow-sm border border-gray-200"},re={class:"max-w-4xl mx-auto"},le={class:"grid grid-cols-2 md:grid-cols-6 gap-4 mb-6"},se={class:"text-center bg-blue-50 p-3 rounded-lg border border-blue-200"},oe={class:"text-xl font-bold text-blue-600"},ae={class:"text-center bg-green-50 p-3 rounded-lg border border-green-200"},ne={class:"text-xl font-bold text-green-600"},de={class:"text-center bg-purple-50 p-3 rounded-lg border border-purple-200"},ie={class:"text-xl font-bold text-purple-600"},ce={class:"text-center bg-orange-50 p-3 rounded-lg border border-orange-200"},ue={class:"text-xl font-bold text-orange-600"},ge={class:"text-center bg-indigo-50 p-3 rounded-lg border border-indigo-200"},fe={class:"text-xl font-bold text-indigo-600"},be={class:"text-center bg-red-50 p-3 rounded-lg border border-red-200"},ve={class:"text-xl font-bold text-red-600"},pe={class:"flex justify-center mb-6"},he={class:"flex justify-center mb-6"},xe={class:"flex gap-8"},me={class:"bg-gray-100 p-4 rounded-lg shadow-lg"},_e={class:"bg-gray-100 p-4 rounded-lg shadow-lg"},ye={key:0,class:"text-center mb-6"},we={class:"bg-red-50 border-2 border-red-300 rounded-lg p-4 shadow-md"},Se={class:"text-red-600"},ke={class:"text-red-600"},ze={class:"text-red-600"},Pe={key:0,class:"text-yellow-600 font-medium mt-2"},Ce=Z({__name:"Tetris",setup(Ie){const V=L({title:"俄罗斯方块"}),r=L({isPlaying:!1,score:0,highScore:0,level:1,lines:0,gameOver:!1}),s=L({boardWidth:window.innerWidth<768?10:12,boardHeight:window.innerWidth<768?20:22,cellSize:window.innerWidth<768?25:30,speed:window.innerWidth<768?800:600}),g=O([]),o=O(null),p=O(null);let i=null;const C={I:[[1,1,1,1]],O:[[1,1],[1,1]],T:[[0,1,0],[1,1,1]],S:[[0,1,1],[1,1,0]],Z:[[1,1,0],[0,1,1]],J:[[1,0,0],[1,1,1]],L:[[0,0,1],[1,1,1]]},T={I:"#00f5ff",O:"#ffff00",T:"#a000f0",S:"#00f000",Z:"#f00000",J:"#0000f0",L:"#ffa000"},j=()=>{g.value=Array(s.boardHeight).fill(null).map(()=>Array(s.boardWidth).fill(0))},I=()=>{const l=Object.keys(C),e=l[Math.floor(Math.random()*l.length)];return{shape:C[e],type:e,x:Math.floor(s.boardWidth/2)-Math.floor(C[e][0].length/2),y:0}},W=(l,e)=>{for(let a=0;a<l.shape.length;a++)for(let c=0;c<l.shape[a].length;c++)if(l.shape[a][c]){const f=l.x+c,_=l.y+a;if(f<0||f>=s.boardWidth||_>=s.boardHeight||_>=0&&e[_][f])return!0}return!1},E=()=>{if(o.value){for(let l=0;l<o.value.shape.length;l++)for(let e=0;e<o.value.shape[l].length;e++)if(o.value.shape[l][e]){const a=o.value.x+e,c=o.value.y+l;c>=0&&(g.value[c][a]=1)}G(),o.value=p.value,p.value=I(),o.value&&W(o.value,g.value)&&J()}},G=()=>{let l=0;for(let e=s.boardHeight-1;e>=0;e--)g.value[e].every(a=>a===1)&&(g.value.splice(e,1),g.value.unshift(Array(s.boardWidth).fill(0)),l++,e++);if(l>0){r.lines+=l,r.score+=l*100*r.level;const e=Math.floor(r.lines/10)+1;e>r.level&&(r.level=e,i&&(clearInterval(i),i=setInterval($,Math.max(100,s.speed-r.level*50))))}},k=(l,e)=>{if(!o.value)return!1;const a={...o.value,x:o.value.x+l,y:o.value.y+e};return W(a,g.value)?!1:(o.value.x=a.x,o.value.y=a.y,!0)},F=()=>{if(!o.value)return;const l=o.value.shape[0].map((a,c)=>o.value.shape.map(f=>f[c]).reverse()),e={...o.value,shape:l};W(e,g.value)||(o.value.shape=l)},$=()=>{!r.isPlaying||!o.value||k(0,1)||E()},M=()=>{r.isPlaying=!0,r.gameOver=!1,r.score=0,r.level=1,r.lines=0,j(),o.value=I(),p.value=I(),i=setInterval($,s.speed)},J=()=>{r.isPlaying=!1,r.gameOver=!0,i&&(clearInterval(i),i=null),r.score>r.highScore&&(r.highScore=r.score,localStorage.setItem("tetrisHighScore",r.highScore.toString()))},U=()=>{i&&clearInterval(i),M()},A=l=>{if(r.isPlaying)switch(l.key){case"ArrowLeft":l.preventDefault(),k(-1,0);break;case"ArrowRight":l.preventDefault(),k(1,0);break;case"ArrowDown":l.preventDefault(),k(0,1);break;case"ArrowUp":case" ":l.preventDefault(),F();break}};return K(()=>{const l=localStorage.getItem("tetrisHighScore");l&&(r.highScore=parseInt(l)),window.addEventListener("keydown",A)}),R(()=>{i&&clearInterval(i),window.removeEventListener("keydown",A)}),(l,e)=>{var f,_;const a=D("el-button"),c=D("el-text");return n(),d("div",ee,[H(X,{title:V.title},null,8,["title"]),t("div",te,[t("div",re,[t("div",le,[t("div",se,[e[0]||(e[0]=t("h3",{class:"text-sm font-medium text-blue-900"},"得分",-1)),t("p",oe,u(r.score),1)]),t("div",ae,[e[1]||(e[1]=t("h3",{class:"text-sm font-medium text-green-900"},"最高分",-1)),t("p",ne,u(r.highScore),1)]),t("div",de,[e[2]||(e[2]=t("h3",{class:"text-sm font-medium text-purple-900"},"等级",-1)),t("p",ie,u(r.level),1)]),t("div",ce,[e[3]||(e[3]=t("h3",{class:"text-sm font-medium text-orange-900"},"消除行数",-1)),t("p",ue,u(r.lines),1)]),t("div",ge,[e[4]||(e[4]=t("h3",{class:"text-sm font-medium text-indigo-900"},"游戏板",-1)),t("p",fe,u(s.boardWidth)+"×"+u(s.boardHeight),1)]),t("div",be,[e[5]||(e[5]=t("h3",{class:"text-sm font-medium text-red-900"},"速度",-1)),t("p",ve,u(s.speed)+"ms",1)])]),t("div",pe,[!r.isPlaying&&!r.gameOver?(n(),B(a,{key:0,onClick:M,type:"primary",class:"bg-blue-500 hover:bg-blue-600 border-blue-600"},{default:P(()=>e[6]||(e[6]=[b(" 开始游戏 ",-1)])),_:1,__:[6]})):m("",!0),r.gameOver?(n(),B(a,{key:1,onClick:U,type:"success",class:"bg-green-500 hover:bg-green-600 border-green-600"},{default:P(()=>e[7]||(e[7]=[b(" 重新开始 ",-1)])),_:1,__:[7]})):m("",!0)]),t("div",he,[t("div",xe,[t("div",me,[t("div",{class:"border-2 border-gray-400 bg-gray-800 relative",style:w({width:s.boardWidth*s.cellSize+"px",height:s.boardHeight*s.cellSize+"px"})},[(n(!0),d(v,null,S(g.value,(h,x)=>(n(),d(v,{key:x},[(n(!0),d(v,null,S(h,(z,y)=>(n(),d("div",{key:`${y}-${x}`,class:N(["border border-gray-600 absolute",{"bg-gray-700":z===0,"bg-blue-500":z===1}]),style:w({width:s.cellSize+"px",height:s.cellSize+"px",left:y*s.cellSize+"px",top:x*s.cellSize+"px"})},null,6))),128))],64))),128)),o.value&&r.isPlaying?(n(!0),d(v,{key:0},S(o.value.shape,(h,x)=>(n(),d(v,{key:`piece-row-${x}`},[(n(!0),d(v,null,S(h,(z,y)=>(n(),d(v,{key:`piece-${y}-${x}`},[z?(n(),d("div",{key:0,class:"border border-gray-600 absolute",style:w({width:s.cellSize+"px",height:s.cellSize+"px",backgroundColor:T[o.value.type],left:(o.value.x+y)*s.cellSize+"px",top:(o.value.y+x)*s.cellSize+"px"})},null,4)):m("",!0)],64))),128))],64))),128)):m("",!0)],4)]),t("div",_e,[e[8]||(e[8]=t("h3",{class:"text-lg font-medium text-gray-900 mb-3"},"下一个",-1)),t("div",{class:"border-2 border-gray-400 bg-gray-800 p-2",style:w({display:"grid",gridTemplateColumns:`repeat(${((_=(f=p.value)==null?void 0:f.shape[0])==null?void 0:_.length)||4}, ${s.cellSize*.8}px)`,gap:"1px"})},[p.value?(n(!0),d(v,{key:0},S(p.value.shape.flat(),h=>(n(),d("div",{key:Math.random(),class:N(["border border-gray-600",{"bg-gray-700":!h,"bg-blue-500":h}]),style:w({width:s.cellSize*.8+"px",height:s.cellSize*.8+"px",backgroundColor:h?T[p.value.type]:"#374151"})},null,6))),128)):m("",!0)],4)])])]),r.gameOver?(n(),d("div",ye,[t("div",we,[e[9]||(e[9]=t("h3",{class:"text-lg font-medium text-red-900 mb-2"},"游戏结束！",-1)),t("p",Se,"最终得分: "+u(r.score),1),t("p",ke,"消除行数: "+u(r.lines),1),t("p",ze,"达到等级: "+u(r.level),1),r.score>r.highScore?(n(),d("p",Pe," 新纪录！恭喜你创造了新的最高分！ ")):m("",!0)])])):m("",!0),e[10]||(e[10]=q('<div class="bg-gray-50 rounded-lg p-4 border-2 border-gray-200 shadow-sm" data-v-fcbf859c><h3 class="text-lg font-medium text-gray-900 mb-3" data-v-fcbf859c>游戏说明</h3><div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-600" data-v-fcbf859c><div class="bg-white p-3 rounded border border-gray-200" data-v-fcbf859c><p data-v-fcbf859c><strong class="text-blue-600" data-v-fcbf859c>游戏目标：</strong>消除完整的横行，获得高分</p><p data-v-fcbf859c><strong class="text-blue-600" data-v-fcbf859c>操作方式：</strong>方向键控制移动，空格键旋转</p></div><div class="bg-white p-3 rounded border border-gray-200" data-v-fcbf859c><p data-v-fcbf859c><strong class="text-green-600" data-v-fcbf859c>得分规则：</strong>每消除一行+100分×当前等级</p><p data-v-fcbf859c><strong class="text-red-600" data-v-fcbf859c>升级机制：</strong>每消除10行升一级，速度加快</p></div></div></div>',1))])]),H(Y,{title:"描述"},{default:P(()=>[H(c,null,{default:P(()=>e[11]||(e[11]=[b(" 经典俄罗斯方块游戏，考验你的空间思维和反应速度：",-1),t("br",null,null,-1),t("br",null,null,-1),b(" 游戏特色：经典俄罗斯方块玩法，7种不同形状的方块，实时得分统计",-1),t("br",null,null,-1),b(" 操作方式：方向键控制移动，空格键旋转方块，消除完整横行",-1),t("br",null,null,-1),b(" 游戏目标：尽可能多地消除横行，获得高分，挑战更高等级",-1),t("br",null,null,-1),b(" 训练效果：锻炼空间思维能力、反应速度和策略规划",-1),t("br",null,null,-1),t("br",null,null,-1),b(" 适合所有年龄段，是经典的益智游戏。 ",-1)])),_:1,__:[11]})]),_:1})])}}});const He=Q(Ce,[["__scopeId","data-v-fcbf859c"]]);export{He as default};
